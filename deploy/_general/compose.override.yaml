# NOTE: Local macOS Docker Desktop docker compose deployment requires:
#   1. "Docker Desktop" -> "Settings" -> "Resources" -> "Network" -> "Use kernel networking for UDP"
#     enables 'bridge100' network interface allowing UDP communication: 
#     * local server <-> deployed coturn service (when debugging ICE communication)
#     * local client <-> deployed coturn service (when debugging within emulated production infra)
#   2. "Settings" -> "Privacy & Security" -> "Local Network" enable for "Rider"
#     allows local server <-> deployed coturn communication 
#     (otherwise "HostUnreachable", "No route to host" when trying to connect coturn ICE service)

services:
  coturn:
    network_mode: host

  # development: generate fake self-signed certificate with `openssl` for localhost nginx
  cert:
    image: certbot/certbot:latest
    entrypoint:
      # TODO: don't touch existing key/cert
      - sh
      - -c
      - |
        set -ex
        echo ">>>> certbot emulation for development" 
        _PATH=/etc/letsencrypt/live/$$SERVER_NAME
        mkdir -p $$_PATH
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout $$_PATH/privkey.pem \
          -out    $$_PATH/fullchain.pem \
          -subj "/C=ZZ/ST=State/L=City/O=Development/CN=localhost"
        echo "<<<< certbot emulation finished" 
