name: Remote Deploy Commands
description: Helper to run remote ssh/docker commands
inputs:
  ssh_user:
    required: true
    description: ssh user
  ssh_host:
    required: true
    description: ssh host
  ssh_private_key:
    required: true
    description: ssh private key
  step_run:
    required: true
    description: commands script
  step_name:
    required: false
    description: step name
    default: Run Deploy Commands

runs:
  using: "composite"
  steps:
    - name: ${{ inputs.step_name }}
      uses: ./.github/composites/remote-ssh
      with:
        ssh_user: ${{ inputs.ssh_user }}
        ssh_host: ${{ inputs.ssh_host }}
        ssh_private_key: ${{ inputs.ssh_private_key }}
        step_name: ${{ inputs.step_name }}
        step_run: |
          #### remote-deploy: ${{ inputs.step_name }}

          # export variable for implicit docker usage in run
          export DOCKER_HOST="ssh://${SSH_TARGET}"

          # allow to cleanup previous deployment id (fixing previous incorrect stop)
          clean_deployment_id() {
            if [[ -z "$1" ]]; then
                echo "clean_deployment_id: name must be specified"
                return 1
            fi
            ssh $SSH_TARGET rm -f deployment-$1.txt
          }

          # allow to store deployment id (to make status inactive on stop)
          save_deployment_id() {
            if [[ -z "$1" || -z "$DEPLOYMENT_ID" ]]; then
                echo "save_deployment_id: name and DEPLOYMENT_ID must be specified"
                return 1
            fi
            ssh $SSH_TARGET sh -c "'echo $DEPLOYMENT_ID > deployment-$1.txt'"
          }

          # allow to obtain deployment id (to make status inactive on stop)
          load_deployment_id() {
            if [[ -z "$1" ]]; then
                echo "load_deployment_id: name must be specified"
                return 1
            fi
            export DEPLOYMENT_ID=$(ssh $SSH_TARGET "cat deployment-$1.txt")
            echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
          }

          ${{ inputs.step_run }}
