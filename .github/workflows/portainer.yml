name: Portainer Deploy

on:
  workflow_dispatch: # allows the workflow to be triggered manually

env:
  DOCKER_STACK_NAME: portainer

jobs:
  deploy:
    name: Update Deployment
    runs-on: ubuntu-latest

    # required to create deployment
    #   https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
    permissions:
      deployments: write

    steps:
      - uses: actions/checkout@v4

      # https://docs.github.com/en/rest/deployments/deployments
      - name: Register Deployment
        run: |
          DEPLOYMENT_REGISTER=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
              "ref": "'${{ github.sha }}'",
              "environment": "infra-portainer",
              "payload": "{ \"state\": \"deploy-state\" }",
              "description": "Deploy request"
            }' \
            https://api.github.com/repos/${{ github.repository }}/deployments)
          echo "created deployment: $DEPLOYMENT_REGISTER"
          DEPLOYMENT_ID=$(echo $DEPLOYMENT_REGISTER | jq -r .id)
          
          # to be used in steps
          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
          # to be used in stop action
          echo "$DEPLOYMENT_ID" > portainer_deployment_id.txt
          
      - name: Upload Deployment ID
        uses: actions/upload-artifact@v4
        with:
          name: portainer_deployment_id
          path: portainer_deployment_id.txt

      - uses: ./.github/composites/ssh-remote-host
        with:
          ssh_user: ${{ secrets.REMOTE_USER }}
          ssh_host: ${{ secrets.REMOTE_HOST }}
          ssh_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          step_name: Docker Stack Deploy
          step_run: |
            echo "==== docker stack deploy: ${DOCKER_STACK_NAME}"
            export DOCKER_HOST="ssh://${SSH_TARGET}"
            docker stack deploy \
              --with-registry-auth \
              --resolve-image always \
              -c deploy/portainer/portainer-agent-stack.yml \
              ${DOCKER_STACK_NAME}

      # https://docs.github.com/en/rest/deployments/statuses
      - name: Update Deployment Status
        run: |
          echo "==== update deployment status: ${{ env.DEPLOYMENT_ID }}, $DEPLOYMENT_ID",
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
              "state": "success",
              "description": "Deployed successfully"
            }' \
            https://api.github.com/repos/${{ github.repository }}/deployments/${{ env.DEPLOYMENT_ID }}/statuses

  # stop:
  #   name: Stop Deployment
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #
  #   steps:
  #     - uses: ./.github/composites/ssh-remote-host
  #       with:
  #         ssh_user: ${{ secrets.REMOTE_USER }}
  #         ssh_host: ${{ secrets.REMOTE_HOST }}
  #         ssh_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
  #         step_name: Docker Stack Deploy
  #         step_run: |
  #           echo "==== docker stack rm: ${DOCKER_STACK_NAME} (${{ github.event.action }})"
  #           echo "DEPLOYMENT_ID=$DEPLOYMENT_ID"
  #           docker stack rm ${DOCKER_STACK_NAME}
