name: Portainer Deploy

on:
  workflow_dispatch: # allows the workflow to be triggered manually

env:
  DOCKER_STACK_NAME: portainer
  ACTION_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  deploy:
    name: Update Deployment
    runs-on: ubuntu-latest
    if: ${{ github.run_attempt == 1 }}

    permissions:
      deployments: write

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/
            deploy/portainer/

      - uses: ./.github/composites/deploy-begin
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: infra-portainer

      - uses: ./.github/composites/remote-deploy
        with:
          ssh_user: ${{ secrets.REMOTE_USER }}
          ssh_host: ${{ secrets.REMOTE_HOST }}
          ssh_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          step_run: |
            #### docker stack deploy
            set -x

            # cleanup previous deployment id (fixes incorrect stop by previous re-run)
            ssh $SSH_TARGET rm -f portainer_deployment_id.txt

            export DATA_ROOT="/home/${{ secrets.REMOTE_USER }}"
            export SERVER_NAME=${{ secrets.REMOTE_HOST }}
            docker stack deploy \
              --with-registry-auth \
              --resolve-image always \
              -c deploy/portainer/portainer-agent-stack.yml \
              ${{ env.DOCKER_STACK_NAME }}

            # store deployment id allowing to make status inactive on stop
            ssh $SSH_TARGET sh -c "'echo $DEPLOYMENT_ID > portainer_deployment_id.txt'"

      - uses: ./.github/composites/deploy-status
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: ${{ job.status }}

  stop:
    name: Stop Deployment
    runs-on: ubuntu-latest
    if: ${{ github.run_attempt > 1 }}
    permissions: 
      deployments: write # update deployment status

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: .github/

      - uses: ./.github/composites/remote-deploy
        with:
          ssh_user: ${{ secrets.REMOTE_USER }}
          ssh_host: ${{ secrets.REMOTE_HOST }}
          ssh_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          step_run: |
            #### stop deployment
            set -x # debug

            # obtain deployment id to make status inactive
            DEPLOYMENT_ID=$(ssh $SSH_TARGET "cat portainer_deployment_id.txt")
            echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV

            # undeploy existing stack
            docker stack rm ${{ env.DOCKER_STACK_NAME }}

      - name: Deployment Status (inactive)
        uses: ./.github/composites/deploy-status
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: inactive
