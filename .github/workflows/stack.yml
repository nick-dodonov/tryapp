name: Stack Deploy

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/src/Server

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: rlespinasse/github-slug-action@v5

      ################################################################
      # Server Build
      - uses: docker/setup-buildx-action@v3 #https://github.com/marketplace/actions/docker-setup-buildx
      - uses: docker/login-action@v3 #https://github.com/marketplace/actions/docker-login 
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5 #https://github.com/marketplace/actions/docker-metadata-action
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
      - uses: docker/build-push-action@v6 #https://github.com/marketplace/actions/build-and-push-docker-images
        with:
          context: .
          file: src/Server/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      #TODO: sign the published docker image

      ################################################################
      # Server Deploy (custom docker stack deploy step much faster than docker-stack-deploy action)
      - uses: ./.github/composites/remote-deploy
        env:
          # environment variables that are used for compose
          STAND_NAME: ${{ github.head_ref || github.ref_name }}
          STACK_NAME: stand-${{ github.head_ref || github.ref_name }}
          SERVER_NAME: ${{ secrets.REMOTE_HOST }}
          SERVER_IMAGE: ${{ steps.meta.outputs.tags }}
        with:
          ssh_user: ${{ secrets.REMOTE_USER }}
          ssh_host: ${{ secrets.REMOTE_HOST }}
          ssh_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          step_name: Stand Stack Deploy STAND_NAME=${{ env.STAND_NAME }} (stack name '${{ env.STACK_NAME }}')
          step_run: |
            #### stand stack deploy GITHUB_REF_POINT=${{ env.GITHUB_REF_POINT }} GITHUB_REF_POINT_SLUG=${{ env.GITHUB_REF_POINT_SLUG }}
            set -x

            # docker stack config -c compose.yaml -c compose.release.yaml # diagnose rendered stack
            docker stack deploy \
              --with-registry-auth \
              -c compose.yaml \
              -c compose.release.yaml \
              ${{ env.STACK_NAME }}

            # deploy test pages
            set -x # test echo on
            COMMIT_SHA=${{ github.sha }}
            COMMIT_SHA=${COMMIT_SHA:0:7}
            COMMIT_DATETIME=$(date -u +"%Y-%m-%d %H:%M:%S")
            echo "COMMIT_SHA=${COMMIT_SHA}"
            echo "COMMIT_DATETIME=$COMMIT_DATETIME"
            sed -i "s/\$COMMIT_SHA/${COMMIT_SHA}/g" pages/index.html
            sed -i "s/\$COMMIT_DATETIME/${COMMIT_DATETIME}/g" pages/index.html
            ## trailing / in rsync is important to copy source directory content to different destination folder
            #rsync -rvv --times pages/ $SSH_TARGET:./pages/
            scp -r pages/ $SSH_TARGET:.
