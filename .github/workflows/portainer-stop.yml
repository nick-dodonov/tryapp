name: Portainer Stop
on:
  workflow_dispatch:
    # inputs:
    #   environment: # ${{ github.event.inputs.environment }}
    #     description: 'Environment to stop'
    #     required: true
    #     type: string
    #     default: infra-portainer

jobs:
  stop:
    permissions:
      deployments: write  # to update deployment

    runs-on: ubuntu-latest
    steps:
      # TODO: docker stack rm (after sharing some vars: ssh_user ssh_host ssh_private_key DOCKER_HOST)

      # - name: Download Deployment ID
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: portainer_deployment_id
      # - name: Stop Deployment
      #   run: |
      #     DEPLOYMENT_ID=$(cat portainer_deployment_id.txt)
      #     echo "DEPLOYMENT_ID=$DEPLOYMENT_ID"
      
      # - name: Load DEPLOYMENT_ID in Env
      #   run: |
      #     gh variable get DEPLOYMENT_ID --env infra-portainer 
      #     DEPLOYMENT_ID=`gh variable get DEPLOYMENT_ID --env infra-portainer`
      #     echo "DEPLOYMENT_ID=$DEPLOYMENT_ID"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Stop Deployment
        run: |
          echo "Stopping Deployment"

          DEPLOYMENT_REGISTER=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
              "ref": "'${{ github.sha }}'",
              "environment": "infra-portainer",
              "payload": "{ \"state\": \"deploy-state\" }",
              "description": "Deploy request"
            }' \
            https://api.github.com/repos/${{ github.repository }}/deployments)
          echo "deployment: $DEPLOYMENT_REGISTER"

          DEPLOYMENT_ID=$(echo $DEPLOYMENT_REGISTER | jq -r .id)

          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
              "state": "inactive",
              "description": "Deployment stopped manually"
            }' \
            https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses
